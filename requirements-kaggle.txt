# ==============================================================================
# requirements-kaggle.txt — SpectraMind V50 (hardened)
# ------------------------------------------------------------------------------
# Runtime-only deps for Kaggle kernels & DVC stages (no dev/lint/test).
# Torch/TV/PyG are installed by bin/kaggle-boot.sh to match CUDA wheels.
#
# Tested against: Python 3.10/3.11 on Kaggle, NumPy 1.26.x (pre-NumPy 2).
#
# Tips:
# • Keep this lean; prefer packages with manylinux wheels.
# • Avoid deps that force source builds (slow / impossible offline).
# • DVC<4 requires rich<14 — keep rich 13.x here.
# ==============================================================================

# --- CLI & Config ---
typer[all]==0.12.5
hydra-core==1.3.2
omegaconf==2.3.0
pydantic==2.7.4
PyYAML==6.0.2
jsonschema==4.23.0
packaging==24.2
typing-extensions==4.12.2

# --- Core Scientific Stack (NumPy 1.26 LTS line) ---
numpy==1.26.4
scipy==1.11.4
pandas==2.2.3
polars==1.5.0

# --- Parquet / Arrow I/O ---
pyarrow==16.1.0

# --- Progress / Logging ---
tqdm==4.66.4
rich==13.7.1            # dvc<4 requires rich<14
loguru==0.7.3

# --- Visualization & Diagnostics ---
matplotlib==3.8.4
seaborn==0.13.2
umap-learn==0.5.6
networkx==3.2.1

# --- Model Utils (non-Torch) ---
scikit-learn==1.5.1     # works with numpy<3.0 and scipy>=1.11
joblib==1.4.2
statsmodels==0.14.2

# --- Symbolic / Physics-informed ---
sympy==1.13.1
numba==0.59.1
llvmlite==0.42.0        # explicit pin for numba 0.59.x on NumPy 1.26.x

# --- DVC (core only; no remote extras for Kaggle) ---
dvc==3.51.2

# ------------------------------------------------------------------------------
# Torch stack handled by bin/kaggle-boot.sh to match Kaggle CUDA wheels:
#   torch==2.3.x / 2.4.x (per image), torchvision paired, PyG via data.pyg.org
# ------------------------------------------------------------------------------