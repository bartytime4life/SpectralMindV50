# ==============================================================================
# SpectraMind V50 — Root Config (Hydra-compliant, hardened)
# ------------------------------------------------------------------------------
# • Groups live at repo config root; Hydra options ONLY under `hydra:`
# • Env-first knobs via oc.env + oc.decode (types decoded from strings)
# • Reproducible run dirs; compact override dirnames for artifact hygiene
# ==============================================================================

# -----------------------------------------------------------------------------
# Composition from config groups (all resolvable under configs/*)
# -----------------------------------------------------------------------------
defaults:
  - env: local
  - data: default
  - calib: default
  - preprocess: default
  - model: v50
  - training: default
  - loss: composite
  - logger: jsonl
  - _self_

# -----------------------------------------------------------------------------
# Run-level knobs (reproducibility & convenience)
#   NOTE: oc.decode ensures booleans/ints parse correctly from env.
# -----------------------------------------------------------------------------
seed: ${oc.decode:${oc.env:SM_SEED,42}}
deterministic: ${oc.decode:${oc.env:SM_DETERMINISTIC,true}}   # true|false
num_workers: ${oc.decode:${oc.env:SM_NUM_WORKERS,2}}          # int
precision: ${oc.decode:${oc.env:SM_TRAIN_PRECISION,32}}       # 16|bf16|32

# Canonical path surface (env-first, safe defaults)
paths:
  data_dir:      ${oc.env:SM_DATA_DIR,./data}
  outputs_dir:   ${oc.env:SM_OUTPUTS_DIR,./outputs}
  artifacts_dir: ${oc.env:SM_ARTIFACTS_DIR,./artifacts}
  cache_dir:     ${oc.env:SM_CACHE_DIR,./.cache}

# Echo of active selections (quick to log/debug)
selections:
  env:         ${defaults.0.env}
  data:        ${defaults.1.data}
  calib:       ${defaults.2.calib}
  preprocess:  ${defaults.3.preprocess}
  model:       ${defaults.4.model}
  training:    ${defaults.5.training}
  loss:        ${defaults.6.loss}
  logger:      ${defaults.7.logger}

# Canonical names for CLI subcommands (read by app, not Hydra)
config_name_calibrate:  calibrate
config_name_preprocess: preprocess
config_name_train:      train
config_name_predict:    predict
config_name_diagnose:   diagnose
config_name_submit:     submit

# -----------------------------------------------------------------------------
# Hydra settings (keep all Hydra options in this block)
# -----------------------------------------------------------------------------
hydra:
  # Tag from env (empty by default to avoid stray separators)
  # Example: export SM_RUN_TAG=_ablation1  → …/spectramind_ablation1
  # Or choose your own convention (no leading underscore).
  # If you prefer enforced leading underscore only when set, set SM_RUN_TAG to include it.
  # e.g., SM_RUN_TAG="_note"
  # (OmegaConf lacks a simple conditional concat)
  run_tag: ${oc.env:SM_RUN_TAG,}

  run:
    dir: ${paths.outputs_dir}/${now:%Y-%m-%d}/${now:%H-%M-%S}_${hydra.job.name}${hydra.run_tag}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}_${hydra.job.name}${hydra.run_tag}
    subdir: ${hydra.job.num}

  job:
    chdir: true
    name: spectramind
    config:
      override_dirname:
        # Make override dirnames compact & deterministic (nice for CI artifacts/logs)
        kv_sep: "="
        item_sep: ","
        # Keep noisy/volatile keys out of the dirname
        exclude_keys: [seed, num_workers, precision]

  # Tighten unknown-key handling (Hydra ≥1.3)
  strict: true

  # Allow disabling .hydra in CI: export HYDRA_OUTPUT_SUBDIR='.'
  output_subdir: ${oc.env:HYDRA_OUTPUT_SUBDIR,.hydra}

  # Quieter logging by default (override per env/logger group if needed)
  job_logging:
    version: 1
    disable_existing_loggers: false
    formatters:
      simple:
        format: "[%(levelname)s] %(message)s"
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        level: INFO
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers: [console]

  # If configs ship inside the wheel at `spectramind/configs/*`,
  # uncomment to add a packaged search path.
  # searchpath:
  #   - pkg://spectramind.configs

# -----------------------------------------------------------------------------
# Sanity assertions (cheap checks your app can enforce early)
# -----------------------------------------------------------------------------
assertions:
  paths_exist:
    data_dir: true
    outputs_dir: true
  fail_fast: true
