# ==============================================================================
# SpectraMind V50 â€” Profile: MLflow Tracking (local or remote, DDP-safe)
# ------------------------------------------------------------------------------
# Local file store (default):
#   python -m spectramind train +defaults='[/profiles/logger_mlflow]'
#
# Remote server:
#   MLFLOW_TRACKING_URI=http://mlflow.your.domain:5000 \
#   python -m spectramind train +defaults='[/profiles/logger_mlflow]'
#
# S3/MinIO artifacts (example):
#   export MLFLOW_S3_ENDPOINT_URL=http://minio.local:9000
#   export AWS_ACCESS_KEY_ID=... ; export AWS_SECRET_ACCESS_KEY=...
#   MLFLOW_TRACKING_URI=http://mlflow.your.domain:5000 \
#   python -m spectramind train +defaults='[/profiles/logger_mlflow]'
# ==============================================================================

defaults:
  - /training/logger: logger

training:
  logger:
    # CI-safe switch: when true, bypass remote and log locally
    offline: ${oc.env:MLFLOW_OFFLINE,false}

    # IMPORTANT for DDP: only log on rank 0 to avoid duplicate runs
    rank_zero_only: ${oc.env:MLFLOW_RANK_ZERO_ONLY,true}

    backend:
      name: "mlflow"
      passthrough:
        # If empty, fall back to a local file store under outputs/mlruns
        # (Hydra 'paths.outputs' should exist in the repo)
        tracking_uri: ${oc.env:MLFLOW_TRACKING_URI,"file://${paths.outputs}/mlruns"}
        # Optional explicit artifact store; leave empty to let MLflow/server decide
        artifact_uri: ${oc.env:MLFLOW_ARTIFACT_URI,""}

        # Naming
        experiment_name: ${experiment.name}
        run_name: "${experiment.name}-${now:%Y%m%d-%H%M%S}${training.logger.uuid_suffix}"

        # Resuming (optional)
        run_id: ${oc.env:MLFLOW_RUN_ID,""}                  # set to resume an existing run
        run_resume: ${oc.env:MLFLOW_RUN_RESUME,false}       # true|false

        # Autologging & model logging (toggle as you prefer)
        autolog: ${oc.env:MLFLOW_AUTOLOG,true}
        log_models: ${oc.env:MLFLOW_LOG_MODELS,false}

        # Default tags (merge with MLflow UI)
        add_default_tags: ${oc.env:MLFLOW_DEFAULT_TAGS,true}
        extra_tags:
          git_commit: ${oc.env:GIT_COMMIT,""}
          git_branch: ${oc.env:GIT_BRANCH,""}
          host: ${oc.env:HOSTNAME,""}
          user: ${oc.env:USER,""}

        # Networking (when remote)
        request_timeout_s: ${oc.env:MLFLOW_TIMEOUT,30}
        max_retries: ${oc.env:MLFLOW_MAX_RETRIES,3}

# Keep experiment identity simple; MLflow uses experiment_name/run_name above
experiment:
  name: ${oc.env:SM_EXPERIMENT_NAME, "mlflow-run"}
  tags: ${oc.env:SM_TAGS, ["profile:mlflow","logger=mlflow"]}
