# ==============================================================================
# SpectraMind V50 â€” mission-grade pre-commit stack (upgraded)
# ==============================================================================
ci:
  autofix_prs: true
  autoupdate_branch: true
  autoupdate_schedule: monthly

default_stages: [commit, push]
default_language_version:
  python: python3.11

# Global excludes (speed + avoid false positives)
exclude: >
  (?x)(
    ^.*/\.venv/|
    ^.*/\.mypy_cache/|
    ^.*/\.ruff_cache/|
    ^.*/\.pytest_cache/|
    ^.*/build/|
    ^.*/dist/|
    ^.*/site/|
    ^assets/|
    ^docs/_build/|
    ^.*/data/|
    \.svg$
  )

repos:
  # --------------------------------------------------------------------
  # Core hygiene
  # --------------------------------------------------------------------
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: check-added-large-files
        args: [--maxkb=500]     # keep repo lean; use DVC for artifacts
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-symlinks
      - id: check-executables-have-shebangs
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: check-ast
      - id: detect-private-key
      - id: check-json
        exclude: ^(poetry\.lock|package-lock\.json)$
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-toml
      - id: pretty-format-json
        name: pretty-format-json (2-space, sorted)
        args: [--autofix, --indent, "2", --no-ensure-ascii, --top-keys, name,version]
        files: ^(.*\.json|.*\.ipynb)$
        exclude: ^(poetry\.lock|package-lock\.json)$

  # Upgrade syntax where safe (quick win before lint)
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.1
    hooks:
      - id: pyupgrade
        args: [--py311-plus]
        files: ^(src/|tests/|scripts/|tools/|spectramind\.py)

  # --------------------------------------------------------------------
  # Python formatting & linting
  # --------------------------------------------------------------------
  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        language_version: python3.11
        files: ^(src/|tests/|scripts/|tools/|configs/|spectramind\.py)

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        language_version: python3.11
        args: [--profile=black, --filter-files]
        files: ^(src/|tests/|scripts/|tools/|configs/|spectramind\.py)

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.6.3
    hooks:
      - id: ruff
        args: [--fix]
        files: ^(src/|tests/|scripts/|tools/|configs/|spectramind\.py)
      # Keep Black canonical; enable ruff-format if you switch later.
      # - id: ruff-format

  # --------------------------------------------------------------------
  # Static typing
  # --------------------------------------------------------------------
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.11.2
    hooks:
      - id: mypy
        additional_dependencies:
          - pandas-stubs
          - numpy
          - types-PyYAML
          - types-requests
          - types-setuptools
        args: [--python-version=3.11]
        files: ^(src/|spectramind\.py)

  # --------------------------------------------------------------------
  # Security
  # --------------------------------------------------------------------
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.9
    hooks:
      - id: bandit
        name: bandit (security scan)
        args: [-ll, -x, tests,docs,notebooks]
        exclude: ^(tests/|docs/|notebooks/)

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: detect-secrets (baseline)
        args:
          - "--baseline"
          - ".secrets.baseline"
          - "--all-files"
        exclude: >
          (^|/)(\.git|\.hg|\.svn|\.tox|\.venv|venv|env|node_modules|dist|build|site|htmlcov|coverage|reports|logs|artifacts|__pycache__|\.mypy_cache|\.pytest_cache|\.dvc/cache|data/raw|data/interim|data/external|notebooks/.+\.ipynb_checkpoints|\.idea|\.vscode|.*\.egg-info)(/|$)

  # --------------------------------------------------------------------
  # DVC: keep data/models out of Git by mistake
  # --------------------------------------------------------------------
  - repo: https://github.com/iterative/dvc
    rev: 3.55.2
    hooks:
      - id: dvc-pre-commit
        name: dvc-pre-commit (guard Git vs DVC)
        pass_filenames: false
        stages: [commit]

  # --------------------------------------------------------------------
  # Notebooks
  # --------------------------------------------------------------------
  - repo: https://github.com/kynan/nbstripout
    rev: 0.7.1
    hooks:
      - id: nbstripout
        files: \.ipynb$
        args: [--keep-count, --keep-output=false]

  # Optional: run ruff/black on .ipynb via nbqa (disabled by default; enable later)
  # - repo: https://github.com/nbQA-dev/nbQA
  #   rev: 1.9.1
  #   hooks:
  #     - id: nbqa-ruff
  #       additional_dependencies: ["ruff==0.6.3"]
  #       args: [--fix]
  #       files: \.ipynb$
  #     - id: nbqa-black
  #       additional_dependencies: ["black==24.8.0"]
  #       files: \.ipynb$

  # --------------------------------------------------------------------
  # Docs & text quality
  # --------------------------------------------------------------------
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.17
    hooks:
      - id: mdformat
        name: mdformat (Markdown formatter)
        additional_dependencies:
          - mdformat-gfm
          - mdformat-frontmatter
          - mdformat-footnote
          - mdformat-myst
        args: [--wrap, "88"]
        files: ^(README\.md|ARCHITECTURE\.md|docs/|.*\.md)$

  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        args: [--ignore-words-list=nd,fo,te,ans,ot]
        exclude: ^(poetry\.lock|.*\.lock|.*\.svg|assets/|docs/|.*\.ipynb)$

  # --------------------------------------------------------------------
  # JSON Schema sanity (schemas/)
  # --------------------------------------------------------------------
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.28.6
    hooks:
      - id: check-jsonschema
        name: JSON Schema metaschema check
        args: [--check-metaschema]
        files: ^schemas/.*\.json$

  # --------------------------------------------------------------------
  # Pyproject validity (lightweight)
  # --------------------------------------------------------------------
  - repo: https://github.com/abravalheri/validate-pyproject
    rev: v0.16
    hooks:
      - id: validate-pyproject

  # --------------------------------------------------------------------
  # Shell / Docker lint (optional; enable if scripts/Dockerfiles present)
  # --------------------------------------------------------------------
  # - repo: https://github.com/koalaman/shellcheck-py
  #   rev: v0.10.0.1
  #   hooks:
  #     - id: shellcheck
  #       files: ^(scripts/|tools/).*\.sh$
  # - repo: https://github.com/hadolint/hadolint
  #   rev: v2.12.0-beta
  #   hooks:
  #     - id: hadolint
  #       files: ^Dockerfile(\..*)?$

  # --------------------------------------------------------------------
  # Conventional commits (commit-msg)
  # --------------------------------------------------------------------
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.27.0
    hooks:
      - id: commitizen
        name: commitizen (enforce Conventional Commits)
        stages: [commit-msg]
        additional_dependencies: ["cz-conventional-changelog"]
        # Requires .cz.toml or pyproject with [tool.commitizen]