# ==============================================================================
# dvc.yaml — SpectraMind V50 (reproducible pipeline, hardened)
# ------------------------------------------------------------------------------
# Stages: calibrate → preprocess → train → predict → diagnose → submit
# Notes:
#   • Use `params:` to trigger stage reproduction; avoid ${params.*} in `cmd`.
#   • Switch profiles with DVC Experiments (Hydra overrides), e.g.:
#       dvc exp run \
#         -S hydra.env=kaggle \
#         -S hydra.model=v50 \
#         -S hydra.config_name_train=train
#   • Persist calibrated/processed data for reuse & Kaggle packaging.
#   • Keep heavy logs out of cache; track small JSON metrics.
# ==============================================================================

stages:
  calibrate:
    desc: "Raw → CALIBRATED tensors (FGS1 + AIRS); physics-based calibration only"
    cmd: >
      spectramind calibrate run data/raw
    deps:
      - data/raw
      - configs
      - src
      - params.yaml
    params:
      - hydra.env
      - hydra.data
      - hydra.calib
    outs:
      - path: data/calibrated
        persist: true

  preprocess:
    desc: "CALIBRATED → PROCESSED; detrend/normalize/bin/features"
    cmd: >
      spectramind preprocess run data/calibrated
    deps:
      - data/calibrated
      - configs
      - src
      - params.yaml
    params:
      - hydra.env
      - hydra.data
      - hydra.preprocess
    outs:
      - path: data/processed
        persist: true

  train:
    desc: "Train dual-channel encoders + heteroscedastic decoder (μ,σ)"
    cmd: >
      spectramind train run
    deps:
      - data/processed
      - configs
      - src
      - params.yaml
    params:
      - hydra.env
      - hydra.data
      - hydra.model
      - hydra.training
      - hydra.loss
      - hydra.logger
    outs:
      # Checkpointed model artifact for iterative/exp runs
      - path: artifacts/ckpt.pt
        checkpoint: true
      # Keep a lightweight metrics JSON under cache for diffs
      - path: artifacts/metrics.json
        cache: true
    outs_no_cache:
      - logs/train
    metrics:
      - artifacts/metrics.json:
          type: json
          xpath: .
          cache: false  # metrics are tracked by DVC; no need to cache

  predict:
    desc: "Run inference on processed data → predictions CSV"
    cmd: >
      spectramind predict run artifacts/ckpt.pt --out-csv artifacts/predictions/preds.csv
    deps:
      - artifacts/ckpt.pt
      - data/processed
      - configs
      - src
      - params.yaml
    params:
      - hydra.env
      - hydra.data
    outs:
      - path: artifacts/predictions/preds.csv
        cache: true

  diagnose:
    desc: "Diagnostics: GLL/MAE/RMSE/coverage + plots + report"
    cmd: >
      spectramind diagnose run artifacts/predictions/preds.csv --out-dir artifacts/diagnostics
    deps:
      - artifacts/predictions/preds.csv
      - configs
      - src
      - params.yaml
    params:
      - hydra.env
      - hydra.data
    outs:
      - path: artifacts/diagnostics/report.html
        cache: true
      - path: artifacts/diagnostics/plots
        cache: true
    plots:
      - artifacts/diagnostics/plots:
          cache: false
    metrics:
      - artifacts/diagnostics/summary.json:
          type: json
          xpath: .
          cache: false
    # Optional live logging (DVC Studio/HTML). Enable in CLI as needed:
    # live:
    #   artifacts/diagnostics/live:
    #     summary: true
    #     html: true

  submit:
    desc: "Package submission artifacts (ZIP with MANIFEST); schema-validate"
    cmd: >
      spectramind submit package artifacts/predictions/preds.csv --out-zip dist/submission.zip
    deps:
      - artifacts/predictions/preds.csv
      - configs
      - src
    outs:
      - path: dist/submission.zip
        cache: true
    # If you want this to always rebuild (e.g., embeds timestamps), uncomment:
    # always_changed: true

  package-precalibrated:
    desc: "Zip CALIBRATED tensors for Kaggle dataset attachment (runtime saver)"
    cmd: >
      bash scripts/package_precalibrated.sh data/calibrated artifacts/kaggle/precalibrated.zip
    deps:
      - data/calibrated
      - scripts/package_precalibrated.sh
    outs:
      - path: artifacts/kaggle/precalibrated.zip
        cache: true