version: 2

updates:
  # ────────────────────────────────
  # Python (pip / pyproject / requirements-*.txt)
  # ────────────────────────────────
  - package-ecosystem: "pip"
    directory: "/"                       # root (pyproject.toml, setup.cfg, requirements-*.txt)
    schedule:
      interval: "weekly"
      day: "sunday"
      time: "03:00"
      timezone: "UTC"
    versioning-strategy: increase-if-necessary
    allow:
      - dependency-type: "direct"
    open-pull-requests-limit: 10
    commit-message:
      prefix: "deps(python)"
      include: "scope"
    labels: [dependencies, python]
    # Grouping reduces churn; keep safety-critical libs separate if desired
    groups:
      dev-deps:
        patterns:
          - "pytest*"
          - "mypy*"
          - "flake8*"
          - "ruff*"
          - "coverage*"
          - "hypothesis*"
      sci-stack:
        patterns:
          - "numpy"
          - "scipy*"
          - "pandas*"
          - "numba*"
          - "xarray*"
      viz:
        patterns:
          - "matplotlib*"
          - "seaborn*"
          - "plotly*"
      torch:
        patterns:
          - "torch*"
          - "pytorch*"
          - "lightning*"
      io-mlops:
        patterns:
          - "dvc*"
          - "mlflow*"
          - "hydra*"
          - "omegaconf*"
    ignore:
      # Avoid surprise CUDA/ABI jumps; we align these manually with base images
      - dependency-name: "torch*"
        update-types: ["version-update:semver-major"]
      - dependency-name: "pytorch*"
        update-types: ["version-update:semver-major"]
    # Resolver / index hygiene (speeds PR CI and avoids flaky mirrors)
    registries: []            # add self-hosted index if used
    insecure-external-code-execution: deny

  # ────────────────────────────────
  # GitHub Actions
  # ────────────────────────────────
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "02:00"
      timezone: "UTC"
    open-pull-requests-limit: 5
    commit-message:
      prefix: "deps(actions)"
      include: "scope"
    labels: [dependencies, ci]
    groups:
      github:
        patterns:
          - "actions/*"
          - "github/*"
      docker:
        patterns:
          - "docker/*"
          - "docker/*-action*"
      security:
        patterns:
          - "aquasecurity/*"
          - "anchore/*"
          - "github/codeql-action*"
      python-setup:
        patterns:
          - "actions/setup-python*"
          - "pypa/*"
    # extra guardrails for supply-chain safety
    allow:
      - dependency-type: "direct"
    rebase-strategy: "auto"

  # ────────────────────────────────
  # Dockerfile base images
  # ────────────────────────────────
  - package-ecosystem: "docker"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "tuesday"
      time: "04:00"
      timezone: "UTC"
    commit-message:
      prefix: "deps(docker)"
      include: "scope"
    labels: [dependencies, docker]
    open-pull-requests-limit: 5
    ignore:
      # CUDA majors are curated manually to stay in lockstep with PyTorch wheels
      - dependency-name: "*cuda*"
        update-types: ["version-update:semver-major"]

  # ────────────────────────────────
  # (Optional) NPM for docs site or UI assets (uncomment if used)
  # ────────────────────────────────
  # - package-ecosystem: "npm"
  #   directory: "/docs"
  #   schedule:
  #     interval: "weekly"
  #     day: "wednesday"
  #     time: "01:00"
  #     timezone: "UTC"
  #   open-pull-requests-limit: 5
  #   commit-message:
  #     prefix: "deps(docs)"
  #     include: "scope"
  #   labels: [dependencies, docs]

# Tips:
# • Consider enabling repo-level auto-merge for Dependabot PRs with passing checks (patch/minor),
#   and gate majors via CODEOWNERS (torch/CUDA/CodeQL).
# • Keep PR caps aligned with reviewer bandwidth; tighten groups if noise increases.
# • Prefer pinning critical build actions (setup-python, docker/login-action) to SHAs in workflows.
