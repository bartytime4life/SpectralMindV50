name: sbom-refresh

on:
  schedule:
    - cron: '0 6 * * 1'   # Every Monday at 06:00 UTC
  workflow_dispatch:

permissions:
  contents: read
  security-events: write  # needed for SARIF upload
  actions: read

concurrency:
  group: sbom-refresh-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.11'

jobs:
  sbom:
    name: Generate SBOMs
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
            pyproject.toml
            setup.cfg
            setup.py

      - name: Install CycloneDX (Python)
        run: |
          python -m pip install --upgrade pip
          pip install cyclonedx-bom

      - name: Install Syft (SBOM generator)
        uses: anchore/sbom-action/download-syft@v0.17.0

      - name: Generate repo SBOM (CycloneDX JSON via Syft)
        run: |
          syft dir:. -o cyclonedx-json > sbom-repo.cdx.json
          test -s sbom-repo.cdx.json

      - name: Generate repo SBOM (SPDX JSON via Syft)
        run: |
          syft dir:. -o spdx-json > sbom-repo.spdx.json
          test -s sbom-repo.spdx.json

      - name: Generate Python deps SBOM (CycloneDX)
        run: |
          # Best-effort; succeeds even if no Python deps detected
          cyclonedx-bom -o sbom-python.cdx.json || true
          [ -s sbom-python.cdx.json ] && echo "Python SBOM created." || echo "No Python SBOM (no deps detected)."

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sboms
          path: |
            sbom-repo.cdx.json
            sbom-repo.spdx.json
            sbom-python.cdx.json
          if-no-files-found: warn
          retention-days: 14

  scan:
    name: Vulnerability Scan (Grype → SARIF)
    runs-on: ubuntu-latest
    needs: sbom
    timeout-minutes: 20

    steps:
      - name: Download SBOM artifacts
        uses: actions/download-artifact@v4
        with:
          name: sboms
          path: sboms

      - name: Install Grype (vulnerability scanner)
        uses: anchore/scan-action/download-grype@v3

      - name: Scan SBOMs with Grype (produce SARIF per SBOM)
        run: |
          set -euo pipefail
          mkdir -p sarif
          shopt -s nullglob
          count=0
          for sb in sboms/*.json; do
            base=$(basename "$sb")
            out="sarif/${base%.json}.sarif"
            echo "Scanning $sb → $out"
            # Accept both CycloneDX and SPDX SBOMs
            grype "sbom:$sb" -o sarif > "$out" || true
            count=$((count+1))
          done
          echo "Scanned $count SBOM(s)."
          ls -l sarif || true

      - name: Upload SARIF results to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: sarif

      - name: Upload SARIF as artifact (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sbom-scan-sarif
          path: sarif/*.sarif
          retention-days: 7