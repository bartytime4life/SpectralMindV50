name: ci

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  packages: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test-typecheck:
    name: Lint, Typecheck & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Lint (Ruff + Flake8)
        run: |
          ruff check src/ tests/
          flake8 src/ tests/

      - name: Typecheck (mypy)
        run: mypy src/

      - name: Run unit tests
        run: pytest -q --disable-warnings --maxfail=1 --cov=src --cov-report=xml

  integration:
    name: Integration Tests (DVC + CLI)
    runs-on: ubuntu-latest
    needs: lint-test-typecheck
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install -r requirements-dev.txt dvc[s3]

      - name: Verify DVC pipeline
        run: dvc doctor && dvc repro --dry

      - name: CLI smoke tests
        run: |
          python -m spectramind --help
          python -m spectramind calibrate --help
          python -m spectramind train --help
          python -m spectramind predict --help
          python -m spectramind diagnose --help
          python -m spectramind submit --help

  security:
    name: Security Scans (pip-audit + CodeQL)
    runs-on: ubuntu-latest
    needs: lint-test-typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install pip-audit
        run: pip install pip-audit

      - name: Run pip-audit
        run: pip-audit -r requirements-dev.txt || true

  sbom:
    name: SBOM (CycloneDX)
    runs-on: ubuntu-latest
    needs: lint-test-typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install CycloneDX
        run: pip install cyclonedx-bom

      - name: Generate SBOM
        run: cyclonedx-bom -r -o sbom.json

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
