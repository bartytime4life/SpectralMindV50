name: security

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main]
  schedule:
    - cron: '0 3 * * 1'  # weekly, Mon 03:00 UTC
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dependency-review:
    name: Dependency Review (PR gate)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/dependency-review-action@v4

  sast-deps:
    name: pip-audit + Bandit + Secrets scan
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements*.txt
            pyproject.toml
            poetry.lock

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit bandit detect-secrets

      - name: pip-audit → SARIF (non-failing)
        run: |
          mkdir -p security
          if [ -f requirements-dev.txt ]; then pip-audit -r requirements-dev.txt --format sarif -o security/pip-audit.dev.sarif || true; fi
          if [ -f requirements.txt ]; then pip-audit -r requirements.txt --format sarif -o security/pip-audit.main.sarif || true; fi

      - name: Bandit (non-failing)
        run: bandit -q -r src -f sarif -o security/bandit.sarif || true

      - name: detect-secrets (non-failing)
        run: |
          detect-secrets scan > security/detect-secrets.json || true

      - name: Upload SARIFs
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: security

  codeql:
    name: CodeQL (Python)
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          languages: python
      - uses: github/codeql-action/autobuild@v3
      - uses: github/codeql-action/analyze@v3
        with:
          category: '/language:python'

  container-scan:
    name: Dockerfile Lint + Trivy Scan
    runs-on: ubuntu-latest
    if: hashFiles('Dockerfile') != ''
    steps:
      - uses: actions/checkout@v4
      - name: Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
      - name: Trivy FS → SARIF (non-failing)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'security/trivy.sarif'
      - name: Upload Trivy SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: security/trivy.sarif