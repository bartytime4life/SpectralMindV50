python3 - <<'PY'
from pathlib import Path
import json

N_BINS = 283
out = Path("schemas/submission.tableschema.sample_id.json")
out.parent.mkdir(parents=True, exist_ok=True)

def make_fields():
    fields = [{
        "name": "sample_id",
        "title": "Row/sample identifier",
        "type": "string",
        "constraints": {"required": True, "pattern": r"^[A-Za-z0-9_\-]+$"},
        "description": "Preferred ID for a submission row."
    }]
    for i in range(N_BINS):
        fields.append({
            "name": f"mu_{i:03d}",
            "type": "number",
            "title": f"Mean transit depth bin {i:03d}",
            "description": "Mean transmission value for this wavelength bin.",
            "constraints": {"required": True},
        })
    for i in range(N_BINS):
        fields.append({
            "name": f"sigma_{i:03d}",
            "type": "number",
            "title": f"Std dev (uncertainty) bin {i:03d}",
            "description": "Non-negative uncertainty for this wavelength bin.",
            "constraints": {"required": True, "minimum": 0},
        })
    return fields

schema = {
    "$id": "https://spectramind-v50.org/schemas/submission.tableschema.sample_id.json",
    "name": "ariel_submission_sample_id",
    "title": "Ariel Submission CSV (SpectraMind V50) — preferred: sample_id",
    "profile": "tabular-data-resource",
    "description": "CSV with one row per sample. Includes 283 mean values (mu_000..mu_282) and 283 non-negative uncertainties (sigma_000..sigma_282).",
    "dialect": {
        "delimiter": ",",
        "quoteChar": "\"",
        "header": True,
        "lineTerminator": "\n"
    },
    "encoding": "utf-8",
    "schema": {
        "fields": make_fields(),
        "primaryKey": ["sample_id"],
        "missingValues": [""]
    }
}

out.write_text(json.dumps(schema, indent=2), encoding="utf-8")
print(f"✅ Wrote {out.resolve()}")
PY