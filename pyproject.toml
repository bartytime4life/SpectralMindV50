# =====================================================================
# pyproject.toml — SpectraMind V50 (Upgraded)
# ---------------------------------------------------------------------
# • Reproducible pins (Kaggle/CI safe)
# • Torch stack lives in extras (install locally or in GH Actions)
# • CLI exposed as `spectramind` (mirrors `python -m spectramind`)
# • Package-data ensures configs/schemas ship inside the wheel
# • Pytest/mypy configuration lives in setup.cfg (avoid duplication)
# =====================================================================

[build-system]
requires = ["setuptools>=69", "wheel>=0.43"]
build-backend = "setuptools.build_meta"

[project]
name = "spectramind-v50"
version = "0.1.0"  # kept static; Makefile syncs this from VERSION
description = "SpectraMind V50 — NeurIPS 2025 Ariel Data Challenge pipeline"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [{ name = "SpectraMind V50 Team" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# ---- Runtime dependencies (Kaggle-safe core; heavy stacks moved to extras) ----
dependencies = [
  # CLI & config
  "typer[all]==0.12.3",
  "hydra-core==1.3.2",
  "omegaconf==2.3.0",
  "pydantic==2.7.4",
  "pyyaml==6.0.1",
  "jsonschema==4.22.0",    # keep in lockstep with requirements files
  "packaging==24.1",

  # Core scientific stack
  "numpy==1.26.4",         # NumPy <2 keeps manylinux wheel coverage on Kaggle
  "scipy==1.11.4",
  "pandas==2.2.2",
  "polars==0.20.31",
  "pyarrow==16.1.0",       # parquet/arrow I/O (pandas/polars compatible)

  # Logging / progress / viz
  "tqdm==4.66.4",
  "rich==13.7.1",
  "matplotlib==3.8.4",
  "seaborn==0.13.2",
  "umap-learn==0.5.6",
  "networkx==3.2.1",
]

[project.optional-dependencies]
# GPU stack: install on local/dev or CI. In Kaggle, prefer the boot script (wheels tied to CUDA).
gpu = [
  "torch==2.2.2",
  "torchvision==0.17.2",
  "torchaudio==2.2.2",
  "lightning==2.3.3",
  "torch-geometric==2.5.3",
]

# CPU-friendly helpers (kept separate to keep core slim).
analysis = [
  "scikit-learn==1.5.1",
  "joblib==1.4.2",
  "statsmodels==0.14.2",
  "sympy==1.13.1",
  "numba==0.59.1",  # 0.60+ requires NumPy 2.x; keep 1.26.x compatibility
]

# Dev/test/typing/linting (tool configs live in setup.cfg).
dev = [
  "pytest==8.3.3",
  "pytest-cov==5.0.0",
  "pytest-xdist==3.6.1",
  "pytest-timeout==2.3.1",
  "hypothesis==6.112.0",
  "ruff==0.6.9",
  "mypy==1.11.2",
  "typing-extensions==4.12.2",
  "toml-sort==0.23.1",
  "check-jsonschema==0.30.0",
  "types-PyYAML==6.0.12.20240808",
  "types-requests==2.32.0.20240907",
  "pre-commit==3.7.1",
  "pip-licenses==4.5.1",
]

docs = [
  "mkdocs==1.6.0",
  "mkdocs-material==9.5.39",
  "pymdown-extensions==10.8.1",
  # "mkdocs-mermaid2-plugin==1.1.1",
  # "mkdocs-gen-files==0.5.0",
  # "mkdocs-literate-nav==0.6.1",
]

security = [
  "pip-audit==2.7.3",
  "cyclonedx-bom==4.3.12",
  # "bandit==1.7.9",
]

# Meta-extra for a full local workstation
all = ["spectramind-v50[analysis,dev,docs,security]"]

[project.urls]
Homepage = "https://github.com/your-org/spectramind-v50"
Repository = "https://github.com/your-org/spectramind-v50"

# ---- Console entrypoint (mirrors `python -m spectramind`) ----
[project.scripts]
spectramind = "spectramind.__main__:main"

# -------------------------- Setuptools packaging --------------------------
[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["spectramind*"]
exclude = ["tests*", "examples*", "docs*"]

# Ensure configs/schemas ship inside the built wheel.
# Place files under src/spectramind/{configs,schemas,assets/...}
[tool.setuptools.package-data]
spectramind = [
  "configs/**/*.yaml",
  "configs/**/*.yml",
  "schemas/**/*.json",
  "assets/diagrams/**/*.mmd",
  "assets/diagrams/rendered/*.*",
]

[tool.setuptools.exclude-package-data]
spectramind = ["**/*.tmp", "**/*.bak"]

# --------------------------------- Ruff -----------------------------------
[tool.ruff]
line-length = 100
target-version = "py311"   # aligns with setup.cfg mypy python_version=3.11

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "C90"]
ignore = ["E203", "W503"]  # black/PEP8 compat patterns

[tool.ruff.lint.isort]
known-first-party = ["spectramind"]
force-sort-within-sections = true
combine-as-imports = true

# ---------------------------- Centralized tooling --------------------------
# Pytest and mypy configuration are centralized in setup.cfg to avoid duplication.
# (See: [tool:pytest], [mypy] in setup.cfg)
