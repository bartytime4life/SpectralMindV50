[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spectramind-v50"
version = "0.1.0"
description = "SpectraMind V50 â€” NeurIPS 2025 Ariel Data Challenge pipeline"
readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }
authors = [
  { name = "SpectraMind V50 Team" }
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

# ---- Runtime dependencies (Kaggle-safe; Torch stack moved to extras) ----
dependencies = [
  "typer[all]>=0.12",
  "hydra-core>=1.3",
  "omegaconf>=2.3",
  "pydantic>=2.7",
  "numpy>=1.26",
  "scipy>=1.11",
  "pandas>=2.2",
  "polars>=1.4",
  "pyyaml>=6.0",
  "tqdm>=4.66",
  "rich>=13.7",
  "matplotlib>=3.8",
  "umap-learn>=0.5",
  "networkx>=3.2",
  "jsonschema>=4.22"
]

[project.optional-dependencies]
# Optional extras for local GPU hosts / non-Kaggle runners.
gpu = [
  "torch>=2.2",
  "torchvision>=0.17",
  "lightning>=2.3",
  "torch-geometric>=2.5",
]
dev = [
  "pytest>=8.1",
  "pytest-cov>=5.0",
  "ruff>=0.6.8",
  "mypy>=1.11",
  "toml-sort>=0.23",
  "check-jsonschema>=0.28",
  "types-PyYAML",
  "types-requests",
  "pre-commit>=3.7",
  "mkdocs>=1.6",
  "mkdocs-material>=9.5",
]

[project.urls]
Homepage = "https://github.com/your-org/spectramind-v50"
Repository = "https://github.com/your-org/spectramind-v50"

# Expose a robust console script. We delegate to __main__.py:main so both
# `spectramind` and `python -m spectramind` behave identically.
[project.scripts]
spectramind = "spectramind.__main__:main"

# -------------------------- Setuptools packaging --------------------------
[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["spectramind*"]
exclude = ["tests*", "examples*", "docs*"]

# NOTE: These paths are relative to the *package* location. Ensure you place
# configs/schemas under `src/spectramind/` (e.g., `src/spectramind/configs/...`).
[tool.setuptools.package-data]
spectramind = [
  "schemas/*.json",
  "configs/**/*.yaml",
  "configs/**/*.yml",
]

# --------------------------------- Ruff -----------------------------------
[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
# base: pycodestyle/pyflakes + upgrades + bugbear + mccabe
select = ["E", "F", "I", "UP", "B", "C90"]
# Black-compatible & common reductions of noise
ignore = ["E203", "W503"]

[tool.ruff.lint.isort]
known-first-party = ["spectramind"]
force-sort-within-sections = true

# --------------------------------- mypy -----------------------------------
[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
show_error_codes = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

# -------------------------------- Pytest -----------------------------------
[tool.pytest.ini_options]
minversion = "8.1"
addopts = "-q --disable-warnings"
testpaths = ["tests", "src/spectramind"]

# ------------------------------ TOML Sort ----------------------------------
[tool.tomlsort]
in_place = false
check = true
sort_inline_tables = true
trailing_comma_inline_array = true
spaces_indent_inline_array = 0
```
